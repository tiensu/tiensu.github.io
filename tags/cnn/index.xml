<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CNN on SuNT&#39;s Blog | AI in Practical</title>
    <link>https://tiensu.github.io/tags/cnn/</link>
    <description>Recent content in CNN on SuNT&#39;s Blog | AI in Practical</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 02 May 2021 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://tiensu.github.io/tags/cnn/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>CNN - Một hành trình phát triển từ 63.3% đến 90.2%</title>
      <link>https://tiensu.github.io/blog/62_cnn_architecture_summary/</link>
      <pubDate>Sun, 02 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/62_cnn_architecture_summary/</guid>
      <description>Năm 2012, Alexnet ra đời với độ chính xác trên tập dữ liệu ImageNet được công bố là 63.3%. Từ đó đến nay, trải qua gần 9 năm phát triển, có rất nhiều kiến trúc mới của CNN nối tiếp nhau ra đời, cái sau tốt hơn cái trước.</description>
    </item>
    
    <item>
      <title>Xây dựng CNN model cho bài toán đa lớp</title>
      <link>https://tiensu.github.io/blog/35_cnn_model_multiple_classification/</link>
      <pubDate>Sun, 20 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/35_cnn_model_multiple_classification/</guid>
      <description>Những bài toán mà chỉ có 2 lớp cần phân biệt gọi là binary classification, còn những bài toán có nhiều hơn 2 lớp được gọi là multiple classification.</description>
    </item>
    
    <item>
      <title>Sử dụng kỹ thuật Transfer Learning khi huấn luyện CNN model</title>
      <link>https://tiensu.github.io/blog/34_transfer_learning/</link>
      <pubDate>Tue, 15 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/34_transfer_learning/</guid>
      <description>Trong các bài toán thực tế, khi làm việc với bộ dataset lớn và kiến trúc model phức tạp, việc huấn luyện model sẽ mất rất nhiều thời gian.</description>
    </item>
    
    <item>
      <title>Sử dụng kỹ thuật Data Augmentation và Model Checkpoint khi huấn luyện CNN model</title>
      <link>https://tiensu.github.io/blog/33_dataaugmentation_modelcheckpoint_cnn/</link>
      <pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/33_dataaugmentation_modelcheckpoint_cnn/</guid>
      <description>Tiếp theo bài trước, trong bài này chúng ta sẽ áp dụng thêm 2 kỹ thuật mới vào CNN model Cat&amp;amp;Dog classification:</description>
    </item>
    
    <item>
      <title>Sử dụng kỹ thuật EarlyStopping khi huấn luyện CNN model</title>
      <link>https://tiensu.github.io/blog/32_earlystopping_cnn/</link>
      <pubDate>Sat, 05 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/32_earlystopping_cnn/</guid>
      <description>Nếu như bài trước, toàn bộ dữ liệu được đưa vào training, thì bài này, ta sẽ chia tập dữ liệu thành 2 phần:</description>
    </item>
    
    <item>
      <title>Xây dựng CNN model với tập dữ liệu Happy&amp;Sad</title>
      <link>https://tiensu.github.io/blog/31_happy_and_sad_classification_cnn/</link>
      <pubDate>Tue, 01 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/31_happy_and_sad_classification_cnn/</guid>
      <description>Như đã hứa ở bài trước, ở bài này chúng ta sẽ sử dụng một bộ dữ liệu &amp;ldquo;thực tế&amp;rdquo; hơn để huấn luyện một DL model phân loại hình ành, đó là happy-or-sad dataset.</description>
    </item>
    
    <item>
      <title>Xây dựng CNN model phân loại với tập dữ liệu MNIST</title>
      <link>https://tiensu.github.io/blog/30_fashion_mnist_classification_advanced/</link>
      <pubDate>Sat, 28 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/30_fashion_mnist_classification_advanced/</guid>
      <description>Trong bài trước, chúng ta đã sử dụng các lớp FC để xây dựng model phân loại các sản phẩm trong tập MNIST thành 10 nhóm khác nhau.</description>
    </item>
    
    <item>
      <title>Mạng thần kinh tích chập (Convolutional Neural Network (CNN) - Phần 3</title>
      <link>https://tiensu.github.io/blog/24_convolutional_neural_network_3/</link>
      <pubDate>Thu, 05 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/24_convolutional_neural_network_3/</guid>
      <description>Tiếp tục chuỗi các bài viết về CNN, trong bài này mình sẽ chia sẻ với các bạn một số &amp;ldquo;common patterns 7 rules&amp;rdquo; trong việc xây dựng kiến trúc CNN.</description>
    </item>
    
    <item>
      <title>Mạng thần kinh tích chập (Convolutional Neural Network (CNN) - Phần 2</title>
      <link>https://tiensu.github.io/blog/23_convolutional_neural_network_2/</link>
      <pubDate>Fri, 30 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/23_convolutional_neural_network_2/</guid>
      <description>Vì sử dụng trực tiếp raw pixel của image nên so với CNN, FCN (Fully Connected Network) có 2 nhược điểm kích thước của image tăng lên:</description>
    </item>
    
    <item>
      <title>Mạng thần kinh tích chập (Convolutional Neural Network (CNN) - Phần 1</title>
      <link>https://tiensu.github.io/blog/22_convolutional_neural_network_1/</link>
      <pubDate>Tue, 27 Oct 2020 00:00:00 +0000</pubDate>
      
      <guid>https://tiensu.github.io/blog/22_convolutional_neural_network_1/</guid>
      <description>Sau khi đã tìm hiểu cơ bản về Neural Network, chúng ta sẽ đi tìm hiểu về CNN. CNN là một dạng kiến trúc Neural Network đóng vai trò vô cùng quan trọng trong Deep Learning.</description>
    </item>
    
  </channel>
</rss>